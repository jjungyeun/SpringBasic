<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org///DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hello.itemservice.repository.mybatis.ItemMapper">
<!--    정의한 인터페이스를 패키지까지 같이 적어준다   -->

    <!--  IDENTITY키를 사용할 경우 useGeneratedKeys, keyProperty 옵션을 사용하면
      INSERT 후에 Item 객체에 키를 알아서 넣어준다.  -->
    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        insert into item (item_name, price, quantity)
        values ( #{itemName}, #{price}, #{quantity})
    </insert>

    <update id="update">
        update item
        set item_name=#{updateParam.itemName},
            price=#{updateParam.price},
            quantity=#{updateParam.quantity}
        where id = #{id}
    </update>

    <!--  조회의 경우 반환 타입을 지정해줘야 한다.
    기본적으로는 패키지이름까지 같이 적어야 하는데, application.properties에 생략 설정을 해줬기 때문에 클래스 이름만 적었다.  -->
    <select id="findById" resultType="Item">
        select id, item_name, price, quantity
        from item
        where id=#{id}
    </select>

    <!--  조건이 둘다 없는 경우에는 where도 없어야하므로 where 태그를 사용한다.
      if문을 사용해서 해당 조건이 있는 경우에만 조건문을 추가한다. (동적 쿼리)  -->
    <select id="findAll" resultType="Item">
        select id, item_name, price, quantity
        from item
        <where>
            <if test="itemName != null and itemName != ''">
                and item_name like concat('%', #{itemName}, '%')
            </if>
        <if test="maxPrice != null">
            and price &lt;= #{maxPrice}
        </if>
        </where>
    </select>
</mapper>